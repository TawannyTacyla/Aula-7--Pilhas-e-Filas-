# Implementação da Classe Pilha 
class Pilha:
    def __init__(self):
        self.itens = []

    def push(self, item):
        self.itens.append(item)

    def pop(self):
        if not self.esta_vazia():
            return self.itens.pop()

    def esta_vazia(self):
        return len(self.itens) == 0

# Classe Navegador que simula o histórico de navegação
class Navegador:
    def __init__(self, pagina_inicial):
        self.historico_voltar = Pilha()
        self.historico_avancar = Pilha()
        self.pagina_atual = pagina_inicial
        print(f"🧭 Navegador iniciado em: {self.pagina_atual}")

    def visitar_pagina(self, url):
        self.historico_voltar.push(self.pagina_atual)  # Armazena a página atual antes de visitar outra
        self.pagina_atual = url  # Atualiza para a nova página
        self.historico_avancar = Pilha()  # Limpa o histórico de avançar
        print(f"🌐 Visitando: {self.pagina_atual}")

    def voltar(self):
        if not self.historico_voltar.esta_vazia():
            self.historico_avancar.push(self.pagina_atual)  # Guarda a página atual
            self.pagina_atual = self.historico_voltar.pop()  # Volta à página anterior
            print(f"⬅️ Voltando para: {self.pagina_atual}")
        else:
            print("⚠️ Não há páginas para voltar.")

    def avancar(self):
        if not self.historico_avancar.esta_vazia():
            self.historico_voltar.push(self.pagina_atual)  # Guarda a página atual
            self.pagina_atual = self.historico_avancar.pop()  # Avança para a próxima página
            print(f"➡️ Avançando para: {self.pagina_atual}")
        else:
            print("⚠️ Não há páginas para avançar.")

# Demonstração do simulador de navegação
navegador = Navegador("google.com")
navegador.visitar_pagina("youtube.com")
navegador.visitar_pagina("Sigaa.ufpe.br")  
navegador.voltar()
navegador.voltar()
navegador.avancar()
navegador.visitar_pagina("github.com")
navegador.voltar()
navegador.avancar()
